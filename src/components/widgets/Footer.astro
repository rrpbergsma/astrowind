---
import { Icon } from 'astro-icon/components';
import { SITE } from 'astrowind:config';
import { getHomePermalink } from '~/utils/permalinks';
import { getFooterData } from '~/navigation';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links?: Array<Links>;
  secondaryLinks?: Array<Link>;
  socialLinks?: Array<Link>;
  footNote?: string;
  theme?: string;
}

import { supportedLanguages } from '~/i18n/translations';

// Define the type for supported languages
type SupportedLanguage = typeof supportedLanguages[number];

// Get current language from URL
const currentPath = `/${Astro.url.pathname.replace(/^\/+|\/+$/g, '')}`;
const pathSegments = currentPath.split('/').filter(Boolean);

// Check for language in URL path
let currentLang = pathSegments[0] && supportedLanguages.includes(pathSegments[0] as SupportedLanguage)
  ? pathSegments[0] as SupportedLanguage
  : null;

// If no language in URL, check cookies
if (!currentLang) {
  const cookies = Astro.request.headers.get('cookie') || '';
  const cookieLanguage = cookies.split(';')
    .map(cookie => cookie.trim())
    .find(cookie => cookie.startsWith('preferredLanguage='))
    ?.split('=')[1];
  
  if (cookieLanguage && supportedLanguages.includes(cookieLanguage as SupportedLanguage)) {
    currentLang = cookieLanguage as SupportedLanguage;
  } else {
    // Default to English if no language is found
    currentLang = 'en';
  }
}

// Get translated footer data
const footerData = getFooterData(currentLang);

const {
  secondaryLinks = footerData.secondaryLinks,
  socialLinks = footerData.socialLinks,
  theme = 'light'
} = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="backdrop-blur-sm absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div
    class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300 intersect-once intersect-quarter intercept-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
  >
    
    <!-- ‚úÖ Combined Footer Section -->
    <div class="flex flex-col md:flex-row md:justify-between py-6 md:py-8 space-y-6 md:space-y-0">
      
      <!-- Left Section: Company Name and Business Details -->
      <div class="flex flex-col items-start space-y-2">
        <!-- Site Title -->
        <a class="inline-block font-bold text-2xl" href={getHomePermalink(currentLang)}>
          {SITE?.name}
          <span class="inline-flex items-center ml-2">
            <Icon name="circle-flags:nl" class="h-5 w-auto flag-square" />
            <span class="mx-1 text-gray-600 text-xl">ü§ù</span>
            <Icon name="circle-flags:eu" class="h-5 w-auto flag-square" />
          </span>
        </a>
        <!-- Business Information (Dutch Law Requirements) -->
        <div class="text-sm text-white-500 space-y-1">
          <p>KVK: 87654321 | BTW: NL123456789B01</p>
          <p>info@365devnet.eu</p>
        </div>
      </div>

      <!-- Right Section: Social Icons and Terms/Privacy Links -->
      <div class="flex flex-col items-start md:items-end space-y-4">
        <!-- Social Icons -->
        {
          socialLinks?.length && (
            <ul class="flex space-x-4">
              {socialLinks.map(({ ariaLabel, href, icon }) => (
                <li>
                  <a
                    class="text-muted dark:text-white-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg p-2 inline-flex items-center"
                    aria-label={ariaLabel}
                    href={href}
                  >
                    {icon && <Icon name={icon} class="w-5 h-5" />}
                  </a>
                </li>
              ))}
            </ul>
          )
        }

        <!-- Terms & Privacy Policy Links -->
        <div class="flex items-center space-x-4 text-sm text-white-500">
          {secondaryLinks.map(({ text, href }) => (
            <a class="hover:text-gray-700 hover:underline dark:hover:text-gray-200 transition duration-150 ease-in-out" href={href}>
              {text}
            </a>
          ))}
        </div>
      </div>
    </div>
  </div>
</footer>

<style>
  .flag-square {
    border-radius: 0 !important;
    overflow: hidden;
  }
</style>